{
  "Languages and Tools": {
    "Site Reliability Engineering": [
      "AWS",
      "Docker",
      "Istio",
      "Kubernetes",
      "Terraform",
      "Datadog"
    ],
    "Software Engineering": [
      "C",
      "CPP",
      "CSharp",
      "Django",
      "Go",
      "NodeJS",
      "TypeScript",
      "Java",
      "Python",
      "MongoDB",
      "SQL",
      "Gatsby"
    ],
    "General Tools": ["Bash", "Git"]
  },
  "Certifications": [
    {
      "certification": "AWS Certified Solutions Architect - Associate",
      "dateAchieved": "January 2020",
      "link": "https://www.credly.com/badges/701b5a9e-582b-4560-9909-df1c80d9334a/public_url",
      "embedBadgeId": "701b5a9e-582b-4560-9909-df1c80d9334a",
      "embedBadgeHost": "https://www.credly.com",
      "embedBadgeSrc": "https://cdn.credly.com/assets/utilities/embed.js"
    }
  ],
  "Experience": [
    {
      "position": "Site Reliability Engineer",
      "company": "Assurance IQ",
      "logo": "Assurance",
      "dateRange": "June 2022 - Present",
      "locaiton": "Toronto, Ontario, Canada",
      "description": []
    },
    {
      "position": "Software Engineer - GitOps",
      "company": "Thomson Reuters",
      "logo": "Tr",
      "dateRange": "May 2020 - June 2022",
      "locaiton": "Toronto, Ontario, Canada",
      "description": [
        "Architected and led development of new <strong>Kubernetes</strong> Ingress Pattern using Network Load Balancers and created a zero-downtime migration procedure moving from existing Classic Load Balancers on large scale clusters in production environments using <strong>Istio</strong> and <strong>Terraform</strong>.",
        "Implemented <strong>Kubernetes</strong> Secret Store CSI Driver across several clusters and migrated ingress certificates from Kubernetes ExternalSecrets with zero-downtime in production environments.",
        "Designed and wrote several unit tests for infrastructure status and readiness using <strong>Go</strong> and <strong>TerraTest</strong> to verify post-deployment status through CICD Pipeline.",
        "Participated actively in <i>L1</i> on-call rotation of 1 week shifts of 24/7 support spread over the team of 7 engineers.",
        "Participated in the definition and implementation of the <strong>SLOs</strong>, <strong>SLAs</strong>, and <strong>SLIs</strong> for the Service Mesh Team.",
        "Designed, implemented, and updated several <strong>DataDog</strong> dashboards and monitors across multiple environments using <strong>Terraform</strong>.",
        "Refactored several parts of the project’s <strong>Terraform</strong> repositories to make them more sustainable for creating and maintaining more than 10 highly available large clusters."
      ]
    },
    {
      "position": "Software Development Intern",
      "company": "Thomson Reuters",
      "logo": "Tr",
      "dateRange": "September 2019 - December 2019",
      "locaiton": "Toronto, Ontario, Canada",
      "description": [
        "Designed CICD Pipeline using <strong>Terraform</strong> to deploy <strong>Kubernetes Service Mesh</strong> on <strong>EKS</strong> from <strong>GitHub</strong> Repository using the <i>GitOps</i> approach.",
        "Participated in the design of CICD Pipeline spawner using <strong>Terraform</strong> to enable application developers to easily create their own CICD Pipelines to deploy applications onto the service mesh platform using <strong>AWS CodePipeline</strong> and <strong>Helm</strong>.",
        "Architected several components of large scale <strong>Kubernetes</strong> cluster with an <strong>Istio Service Mesh</strong>.",
        "Developed team’s best practices using SDLC principles such as <i>Git Branching</i> strategies and automating processes by implementing the <i>GitOps</i> methodology."
      ]
    },
    {
      "position": "Software Engineering Intern",
      "company": "Flipp",
      "logo": "Flipp",
      "dateRange": "January 2019 - April 2019",
      "locaiton": "Toronto, Ontario, Canada",
      "description": [
        "Designed core features of different parts of the Snicket platform using <strong>TypeScript-Node</strong> using <i>Event Driven MicroServices</i> architecture.",
        "Led the design and Implementation on Snicket’s Database and Product Asset Management MicroService which use <strong>AWS RDS</strong> and <strong>AWS S3</strong> respectively, providing a high business value through automating the management of product images for vendors which includes several operations on the images using <strong>Sharp</strong>.",
        "Created multiple improvements and fixes to Snicket’s <strong>Docker</strong> and <strong>CircleCI</strong> environments.",
        "Designed <i>unit</i> and <i>integration</i> tests and developed them using <strong>Jest</strong> in order to promote a <i>fail often, fail fast</i> environment."
      ]
    },
    {
      "position": "IT Student Intern",
      "company": "London Hydro",
      "logo": "Lh",
      "dateRange": "September 2017 - December 2017",
      "locaiton": "London, Ontario, Canada",
      "description": [
        "Overhauled design and redeveloped high priority project management portal for customer facing smart home system using <strong>Django</strong> .",
        "Designed and integrated portal’s data warehouse using <strong>AWS Redshift</strong>, enabling distribution team to easily update database and providing tracing.",
        "Created monitoring and distribution dashboards using <strong>Plotly</strong>.",
        "Automated Swagger API testing using <strong>Python</strong>.",
        "developed maintenance automation for several excel spreadsheets using <strong>Python</strong> to save hours of manual labor daily."
      ]
    },
    {
      "position": "IT Systems Engineering Specialist",
      "company": "Toyota Motor Manufacturing Canada",
      "logo": "Tmmc",
      "dateRange": "May 2016 - September 2016, January 2017 - May 2017",
      "locaiton": "Cambridge, Ontario, Canada",
      "description": [
        "Led the development and launch of new Android Andon application using <strong>Xamarin</strong>.",
        "Developed C# app required for 2017 Corolla launch which resulted in $500,000 annual savings.",
        "Assisted in developing multiple automation projects using <strong>ASP.NET</strong> and <strong>Jenkins</strong> to improve shop floor work, efficiency, and manpower allocation."
      ]
    }
  ],
  "Projects": [
    {
      "name": "Vigilant — Final Year Design Project",
      "duration": "8 months",
      "description": [
        "Worked with team to create YOLO models to detect specific human postures and perform facial detection in case of potential emergencies.",
        "Designed and created a Python backend system which lived on AWS ECS and integrated the YOLO models with it.",
        "Integrated backend with team’s AWS Kinesis video feed to provide video frames to the detection models.",
        "Designed and developed a simple React.JS frontend in order to display the processed video feed."
      ]
    },
    {
      "name": "Pancreatic Cancer Detection using Machine Learning",
      "duration": "3 months",
      "description": [
        "Worked as part of a team of 3 to create U-Net, Convolitional Neural Networks, and Artificial Neural Networks to create and train models using open-source 3D imaging samples.",
        "Found extremely minor success due to the complexity of the task and scarcity of data-points in the images, which are the reason that pancreatic cancer is the most difficult to detect."
      ]
    },
    {
      "name": "Road Pothole Detection System",
      "duration": "2 months",
      "description": [
        "Created a mobile web-app using React.JS which turns the user’s smartphone into an Internet of Things device that provides a data-feed of velocity and acceleration vectors using the phone’s gyroscope and geolocation.",
        "Developed a simple adaptive algorithm which attempts to predict the availability of a pothole at the driver’s current location based on the acceleration and geolocation data provided by the smartphone.",
        "Found a success percentage of approximately 65% with limited data used to tune the algorithm."
      ]
    },
    {
      "name": "Kirsch Edge Detector",
      "duration": "1 month",
      "description": [
        "Designed Dataflow Diagram based off algebraic optimizations in order to detect edges in a pixel matrix through 3x3 convolution tables.",
        "Implemented the design in VHDL and applied hardware optimizations at the bit level in order to maximize clock speed and minimize circuit area.",
        "Used Intel Quartus Prime and ModelSim to debug the FPGA and further improve efficiency."
      ]
    }
  ],
  "Education": {
    "school": "University of Waterloo",
    "location": "Waterloo, Ontario, Canada",
    "degree": "Bachelor of Applied Science in Computer Engineering Honours Program",
    "graduationDate": "May 2020",
    "specialtyCourses": [
      "Cooperative and Adaptive Algorithms",
      "Computational Intelligence",
      "Internet of Things",
      "Compilers",
      "Computer Security",
      "Cryptography and System Security",
      "Algorithm Design and Analysis",
      "Computer Networks"
    ]
  }
}
